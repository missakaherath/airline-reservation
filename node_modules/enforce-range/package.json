{
  "_args": [
    [
      {
        "raw": "enforce-range@^1.0.0",
        "scope": null,
        "escapedName": "enforce-range",
        "name": "enforce-range",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "E:\\sem4my\\node\\airline mvc\\node_modules\\3"
    ]
  ],
  "_from": "enforce-range@>=1.0.0 <2.0.0",
  "_id": "enforce-range@1.0.0",
  "_inCache": true,
  "_location": "/enforce-range",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/enforce-range-1.0.0.tgz_1512828359960_0.2076918443199247"
  },
  "_npmUser": {
    "name": "lamansky",
    "email": "johnlamansky@gmail.com"
  },
  "_npmVersion": "4.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "enforce-range@^1.0.0",
    "scope": null,
    "escapedName": "enforce-range",
    "name": "enforce-range",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/3"
  ],
  "_resolved": "https://registry.npmjs.org/enforce-range/-/enforce-range-1.0.0.tgz",
  "_shasum": "f10ccc0396e23684b413d73661d020d192e5ba70",
  "_shrinkwrap": null,
  "_spec": "enforce-range@^1.0.0",
  "_where": "E:\\sem4my\\node\\airline mvc\\node_modules\\3",
  "author": {
    "name": "John Lamansky"
  },
  "bugs": {
    "url": "https://github.com/lamansky/enforce-range/issues"
  },
  "dependencies": {
    "2": "^1.0.2"
  },
  "description": "Enforce a minimum and/or maximum value for a number.",
  "devDependencies": {
    "eslint-config-lamansky": "^1.0.0",
    "mocha": "^4.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "f10ccc0396e23684b413d73661d020d192e5ba70",
    "tarball": "https://registry.npmjs.org/enforce-range/-/enforce-range-1.0.0.tgz"
  },
  "eslintConfig": {
    "extends": "lamansky",
    "env": {
      "mocha": true
    }
  },
  "files": [],
  "gitHead": "fe3c70c8866f5d0224470ef57f55dac6dbec5ab2",
  "homepage": "https://github.com/lamansky/enforce-range",
  "keywords": [
    "number",
    "range",
    "min",
    "minimum",
    "max",
    "maximum",
    "value"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "lamansky",
      "email": "johnlamansky@gmail.com"
    }
  ],
  "name": "enforce-range",
  "optionalDependencies": {},
  "readme": "# enforce-range\n\nEnforce a minimum and/or maximum value for a number.\n\n## Installation\n\n```bash\nnpm install enforce-range --save\n```\n\n## Usage\n\n```javascript\nconst enforceRange = require('enforce-range')\n\n// Number should be between 0 and 100\nenforceRange(0, 100, 51) // 51\nenforceRange(0, 100, -123) // 0\nenforceRange(0, 100, 456) // 100\n```\n\n### Partial Application\n\nIf you provide only the first two arguments (a minimum and a maximum value), the module will create a partially-applied function which enforces that range. Here's the above example repeated with this usage mode:\n\n```javascript\nconst enforce0to100 = require('enforce-range')(0, 100)\n\n// Number should be between 0 and 100\nenforce0to100(51) // 51\nenforce0to100(-123) // 0\nenforce0to100(456) // 100\n```\n\n### Open-Ended Ranges\n\nIf, for some reason, you want this module to enforce a range that is only bound on one end, you can do so by passing `null` or ±`Infinity` as the minimum/maximum value. (However, in such a case you’re probably better off cutting the overhead of using a module and just using `Math.min()` or `Math.max()`.)\n\n```javascript\nconst enforceRange = require('enforce-range')\n\n// Maximum only\nenforceRange(null, 100, 200) // 100\nenforceRange(-Infinity, 100, 200) // 100\n\n// Minimum only\nenforceRange(0, null, 51) // 51\nenforceRange(0, Infinity, 51) // 51\n\n// No range enforcement at all (module does nothing)\nenforceRange(null, null, 12345) // 12345\nenforceRange(-Infinity, Infinity, 12345) // 12345\n```\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lamansky/enforce-range.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.0"
}
